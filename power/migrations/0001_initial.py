# Generated by Django 5.2.4 on 2025-07-12 10:03

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_user', models.CharField(max_length=100)),
                ('action', models.CharField(choices=[('LOGIN', 'Admin Login'), ('EDIT', 'Content Edit'), ('DELETE', 'Content Deletion'), ('CONFIG', 'Configuration Change')], max_length=6)),
                ('details', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ESGResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('resource_type', models.CharField(choices=[('GUIDE', 'Guide'), ('REPORT', 'Industry Report'), ('CASE', 'Case Study'), ('TOOL', 'Tool/Template')], max_length=8)),
                ('description', models.TextField()),
                ('file', models.FileField(upload_to='esg_resources/')),
                ('published_date', models.DateField(auto_now_add=True)),
                ('is_featured', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-published_date'],
            },
        ),
        migrations.CreateModel(
            name='MonthlyMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField(unique=True)),
                ('new_clients', models.PositiveIntegerField()),
                ('revenue', models.DecimalField(decimal_places=2, max_digits=12)),
                ('expenses', models.DecimalField(decimal_places=2, max_digits=12)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('service_type', models.CharField(choices=[('SEA', 'Smart Energy Assessment'), ('CSE', 'Custom Solar & Efficiency Plan'), ('SER', 'Sustainability & ESG Roadmap'), ('REC', 'Remote Energy Coaching'), ('WIS', 'Weekend Installation & Supervision')], max_length=3, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('value_proposition', models.TextField()),
                ('icon_class', models.CharField(default='fas fa-solar-panel', max_length=30)),
                ('display_order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['display_order'],
            },
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('service', models.CharField(choices=[('SEA', 'Smart Energy Assessment'), ('CSE', 'Custom Solar & Efficiency Plan'), ('SER', 'Sustainability & ESG Roadmap'), ('REC', 'Remote Energy Coaching'), ('WIS', 'Weekend Installation & Supervision'), ('OTH', 'Other')], max_length=3)),
                ('message', models.TextField()),
                ('submitted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_completed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='InstallationProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=100)),
                ('completion_date', models.DateField()),
                ('system_size_kw', models.DecimalField(decimal_places=2, max_digits=6)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('profit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='power.service')),
            ],
        ),
        migrations.CreateModel(
            name='CaseStudy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('client_name', models.CharField(blank=True, max_length=100)),
                ('client_type', models.CharField(choices=[('RES', 'Residential'), ('COM', 'Commercial'), ('IND', 'Industrial')], max_length=3)),
                ('location', models.CharField(max_length=100)),
                ('installation_date', models.DateField()),
                ('system_capacity', models.DecimalField(decimal_places=2, help_text='System size in kW', max_digits=6)),
                ('project_cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('previous_consumption', models.PositiveIntegerField(help_text='Monthly consumption before installation')),
                ('current_consumption', models.PositiveIntegerField(help_text='Monthly consumption after installation')),
                ('testimonial', models.TextField(blank=True)),
                ('featured_image', models.ImageField(blank=True, upload_to='case_studies/')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_studies', to='power.service')),
            ],
        ),
    ]
